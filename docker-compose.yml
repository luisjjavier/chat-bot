version: '3.9'

services:
  webapp:
    image: webapp
    build: 
      context: ./src
      dockerfile: ChatBot/webapp/Dockerfile
    ports:
      - 8888:80
  webapi:
    image: webapi
    build: 
      context: ./src
      dockerfile: ChatBot/main/deployables/ChatBot.API/Dockerfile
    ports:
      - 7523:80
      - 7524:443
    restart: on-failure
    depends_on:
      - rabbitmq
      - dbchatbot 
  botworker:
    image: botworker
    build:
      context: ./src
      dockerfile: ChatBot/main/deployables/ChatBot.BotRunner/Dockerfile
    ports:
      - 7525:80
      - 7526:443
    restart: on-failure
    depends_on:
      - rabbitmq
      - dbchatbot  
  dbchatbot:
    container_name: dbchatbot
    image: "mcr.microsoft.com/mssql/server:2019-latest"
    environment:
        SA_PASSWORD: "AT8jY5fgkHdWWcz"
        ACCEPT_EULA: "Y"
    ports:
      - 1453:1433
    volumes:
      - db-chatbot-data:/var/opt/mssql
  rabbitmq:
    image: rabbitmq:3.9-management
    hostname: rabbitmq
    volumes:
      - "~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/"
      - "~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq"
    ports:
      - 5672:5672
      - 15672:15672
    expose:
     - 5672
     - 15672
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    healthcheck:
        test: [ "CMD", "rabbitmqctl", "status", "-f", "http://localhost:15672"]
        interval: 5s
        timeout: 20s
        retries: 5
volumes:
  db-chatbot-data: